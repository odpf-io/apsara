@import './inline';
@import './horizontal';
@import './vertical';
@import './status';
@import './mixin';

@error-color: #ff4d4f;
@success-color: #52c41a;
@warning-color: #faad14;
@primary-color: #1890ff;
@form-warning-input-bg: transparent;

@warning-color-hover: mix(#faad14, #fff, 85%);
@warning-color-outline: mix(#faad14, #fff, 85%);
@error-color-hover: #f5222d;

@form-error-input-bg: transparent;
@error-color-outline:#f5222d;

@input-height-sm: 24px;
@input-height-lg: 32px;
@form-item-label-height: 28px;

@label-color: fade(#000, 85%);

@form-item-label-font-size: 14px;

@form-font-height: ceil(14px * 1.5715);

@label-required-color: #f5222d;
@margin-xss: 4px;
@text-color-secondary: rgba(0, 0, 0, 0.45);
@form-item-trailing-colon: true;
@form-item-label-colon-margin-right: 8px;
@form-item-label-colon-margin-left: 2px;
@input-height-base: 32px;

@ease-out: cubic-bezier(0.215, 0.61, 0.355, 1);
@ease-out-back: cubic-bezier(0.12, 0.4, 0.29, 1.46);
@ease-in-out: cubic-bezier(0.645, 0.045, 0.355, 1);

@animation-duration-slow: 0.3s;
@animation-duration-base: 0.2s;
@animation-duration-fast: 0.1s;

@input-padding-horizontal-base: 11px;
@input-padding-horizontal-sm: 3px;
@input-padding-horizontal-lg: 12px;

@form-item-margin-bottom: 24px;


.reset-component() {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  color: fade(#000, 85%);
  font-size: 14px;
  font-variant: tabular-nums;
  line-height: 1.5715;
  list-style: none;
  font-feature-settings: 'tnum';
}


.custom-form {
  .reset-component();
  .reset-form();

  .custom-form-text {
    display: inline-block;
    padding-right: 8px;
  }

  // ================================================================
  // =                             Size                             =
  // ================================================================
  .formSize(@input-height) {
    .custom-form-item-label > label {
      height: @input-height;
    }

    .custom-form-item-control-input {
      min-height: @input-height;
    }
  }

  &-small {
    .formSize(@input-height-sm);
  }

  &-large {
    .formSize(@input-height-lg);
  }
}

.explainAndExtraDistance(@num) when (@num >= 0) {
  padding-top: floor(@num);
}

.explainAndExtraDistance(@num) when (@num < 0) {
  margin-top: ceil(@num);
  margin-bottom: ceil(@num);
}

// ================================================================
// =                             Item                             =
// ================================================================
.custom-form-item {
  .reset-component();

  margin-bottom: 24px;
  vertical-align: top;

  &-with-help {
    margin-bottom: 0;
    transition: none;
  }

  &-hidden,
  &-hidden.ant-row {
    // https://github.com/ant-design/ant-design/issues/26141
    display: none;
  }

  // ==============================================================
  // =                            Label                           =
  // ==============================================================
  &-label {
    display: inline-block;
    flex-grow: 0;
    overflow: hidden;
    white-space: nowrap;
    text-align: right;
    vertical-align: middle;

    &-left {
      text-align: left;
    }

    &-wrap {
      overflow: unset;
      line-height: (1.5715 - 0.25em);
      white-space: unset;
    }

    > label {
      position: relative;
      display: inline-flex;
      align-items: center;
      max-width: 100%;
      height: @form-item-label-height;
      color: @label-color;
      font-size: @form-item-label-font-size;
      text-transform: uppercase;

      // > .@{iconfont-css-prefix} {
      //   font-size: @form-item-label-font-size;
      //   vertical-align: top;
      // }

      // Required mark
      &.custom-form-item-required:not(.custom-form-item-required-mark-optional)::before {
        display: inline-block;
        margin-right: 4px;
        color: @label-required-color;
        font-size: @form-item-label-font-size;
        font-family: SimSun, sans-serif;
        line-height: 1;
        content: '*';

        .custom-form-hide-required-mark & {
          display: none;
        }
      }

      // Optional mark
      .custom-form-item-optional {
        display: inline-block;
        margin-left: @margin-xss;
        color: @text-color-secondary;

        .custom-form-hide-required-mark & {
          display: none;
        }
      }

      // Optional mark
      .custom-form-item-tooltip {
        color: @text-color-secondary;
        cursor: help;
        writing-mode: horizontal-tb;
        margin-inline-start: @margin-xss;
      }

      &::after {
        & when (@form-item-trailing-colon=true) {
          content: ':';
        }
        & when not (@form-item-trailing-colon=true) {
          content: ' ';
        }

        position: relative;
        top: -0.5px;
        margin: 0 @form-item-label-colon-margin-right 0 @form-item-label-colon-margin-left;
      }

      &.custom-form-item-no-colon::after {
        content: ' ';
      }
    }
  }

  // ==============================================================
  // =                            Input                           =
  // ==============================================================
  &-control {
    display: flex;
    flex-direction: column;
    flex-grow: 1;

    &:first-child:not([class^=~"'ant-col-'"]):not([class*=~"' ant-col-'"]) {
      width: 100%;
    }
  }

  &-control-input {
    position: relative;
    display: flex;
    align-items: center;
    min-height: @input-height-base;

    &-content {
      flex: auto;
      max-width: 100%;
    }
  }

  // ==============================================================
  // =                           Explain                          =
  // ==============================================================
  &-explain,
  &-extra {
    clear: both;
    color: @text-color-secondary;
    min-height: @form-item-margin-bottom;
    font-size: 14px;
    line-height: 1.5715;
    transition: color 0.3s @ease-out; // sync input color transition
    .explainAndExtraDistance((24px - @form-font-height) / 2);
  }

  &-explain-connected {
    width: 100%;
  }

  &-extra {
    min-height: 24px;
  }

  &-with-help &-explain {
    height: auto;
    opacity: 1;
  }

  // ==============================================================
  // =                        Feedback Icon                       =
  // ==============================================================
  &-feedback-icon {
    font-size: 14pxe;
    text-align: center;
    visibility: visible;
    animation: zoomIn 0.3s @ease-out-back;
    pointer-events: none;

    &-success {
      color: @success-color;
    }

    &-error {
      color: @error-color;
    }

    &-warning {
      color: @warning-color;
    }

    &-validating {
      color: @primary-color;
    }
  }
}


// ==============================================================
// =                           Motion                          =
// ==============================================================

.motion-common(@duration: @animation-duration-base) {
  animation-duration: @duration;
  animation-fill-mode: both;
}

.motion-common-leave(@duration: @animation-duration-base) {
  animation-duration: @duration;
  animation-fill-mode: both;
}

.make-motion(@className, @keyframeName, @duration: @animation-duration-base) {
  .@{className}-enter,
  .@{className}-appear {
    .motion-common(@duration);

    animation-play-state: paused;
  }
  .@{className}-leave {
    .motion-common-leave(@duration);

    animation-play-state: paused;
  }
  .@{className}-enter.@{className}-enter-active,
  .@{className}-appear.@{className}-appear-active {
    animation-name: ~'@{keyframeName}In';
    animation-play-state: running;
  }
  .@{className}-leave.@{className}-leave-active {
    animation-name: ~'@{keyframeName}Out';
    animation-play-state: running;
    pointer-events: none;
  }
}

.show-help-motion(@className, @keyframeName, @duration: @animation-duration-slow) {
  @name: ~'explain-@{className}';
  .make-motion(@name, @keyframeName, @duration);
  .@{name}-enter,
  .@{name}-appear {
    opacity: 0;
    animation-timing-function: @ease-in-out;
  }
  .@{name}-leave {
    animation-timing-function: @ease-in-out;
  }
}

.show-help-motion(show-help, explainShowHelp, 0.3s);

@keyframes explainShowHelpIn {
  0% {
    transform: translateY(-5px);
    opacity: 0;
  }
  100% {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes explainShowHelpOut {
  to {
    transform: translateY(-5px);
    opacity: 0;
  }
}

.custom-motion-collapse {
  overflow: hidden;
  transition: height @animation-duration-base @ease-in-out,
  opacity @animation-duration-base @ease-in-out !important;
}


// need there different zoom animation
// otherwise won't trigger anim
@keyframes diffZoomIn1 {
  0% {
    transform: scale(0);
    opacity: 0;
  }

  100% {
    transform: scale(1);
    opacity: 1;
  }
}

@keyframes diffZoomIn2 {
  0% {
    transform: scale(0);
    opacity: 0;
  }

  100% {
    transform: scale(1);
    opacity: 1;
  }
}

@keyframes diffZoomIn3 {
  0% {
    transform: scale(0);
    opacity: 0;
  }

  100% {
    transform: scale(1);
    opacity: 1;
  }
}

@import './rtl';
